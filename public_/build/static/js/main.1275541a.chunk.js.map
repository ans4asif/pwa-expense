{"version":3,"sources":["context/AppReducer.tsx","context/globalContext.tsx","Components/AccountSummary.tsx","Components/Balance.tsx","Components/Header.tsx","Components/AddTransaction.tsx","Components/TransactionHistory.tsx","firebaseNotifications.tsx","App.tsx","swDev.js","reportWebVitals.ts","index.tsx"],"names":["AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","description","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","addTransaction","deleteTransaction","AccountSummary","useContext","map","income","reduce","a","b","toFixed","expense","className","Balance","total","Header","AddTransaction","useState","setDescription","setAmount","onSubmit","e","preventDefault","newTransaction","Math","floor","random","htmlFor","onChange","target","placeholder","required","TransactionHistory","Button","onClick","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","messaging","App","navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","scope","err","Notification","requestPermission","permission","getToken","currentToken","catch","Paper","elevation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1275541a.chunk.js","sourcesContent":["export const AppReducer = (state:any,action:any) => {\r\n    switch(action.type){\r\n        case 'Del_Transaction':\r\n        return{\r\n            ...state,\r\n            transactions:state.transactions.filter((transaction:any)=>transaction.id !==action.payload)\r\n        }\r\n        case 'Add_Transaction':\r\n            return{\r\n                ...state,\r\n                transactions:[action.payload,...state.transactions]\r\n            }\r\n        default:\r\n            return state\r\n            \r\n    };\r\n    \r\n    \r\n}\r\n","import React , {createContext,useReducer} from 'react'\r\nimport {AppReducer} from './AppReducer'\r\nexport const initialState:any={\r\n    transactions:[\r\n        {id:2,description:'salary',amount:500}\r\n        \r\n\r\n    ]\r\n}\r\nexport const GlobalContext=createContext(initialState);\r\n\r\nexport const GlobalProvider = ({children}:any) => {\r\n const[state,dispatch]=useReducer(AppReducer,initialState);\r\n\r\nfunction addTransaction(transactions:any){\r\n    dispatch({\r\n        type:'Add_Transaction',\r\n        payload:transactions\r\n    }\r\n    );\r\n}\r\n\r\nfunction deleteTransaction(id:any){\r\n    dispatch({\r\n        type:'Del_Transaction',\r\n        payload:id\r\n    }\r\n    );\r\n}\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions:state.transactions,\r\n            addTransaction,\r\n            deleteTransaction  \r\n            \r\n        }}>\r\n\r\n       {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n    \r\n}\r\n","import React,{useContext} from 'react'\r\nimport {GlobalContext} from './../context/globalContext';\r\n\r\nexport const AccountSummary = () => {\r\n    const {transactions}=useContext(GlobalContext);\r\n\r\n    const amount=transactions.map((transactions:any)=>transactions.amount);\r\n    const income=amount.filter((amount:any)=>amount>0)\r\n                       .reduce((a:any,b:any)=>(a+=b),0)\r\n                       .toFixed(1);\r\n    \r\n    const expense=amount.filter((amount:any)=>amount<0)\r\n                       .reduce((a:any,b:any)=>(a+=b),0)\r\n                       .toFixed(1);\r\n\r\n    return (\r\n        <div className=\"income-expense-tab\">\r\n            <div className=\"income\">\r\n                <h3>Income</h3>\r\n                <h2 className=\"inc\">${income}</h2>\r\n            </div>\r\n\r\n            <div className=\"expense\">\r\n                <h3>Expense</h3>\r\n                <h2 className=\"exp\">${expense}</h2>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport {GlobalContext} from './../context/globalContext';\r\n\r\nexport const Balance = () => {\r\n    const {transactions}=useContext(GlobalContext);\r\n    const amounts=transactions.map((transactions:any)=>transactions.amount);\r\n    const total=amounts.reduce((a:any,b:any)=>(a+=b),0).toFixed(1);\r\n\r\n    return (\r\n        <div >\r\n            <h3 className='balance'>Balance</h3>\r\n            <h1>${total}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className='app-name'>\r\n            <h2>Expense Tracker</h2>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useContext} from 'react';\r\nimport { GlobalContext } from '../context/globalContext';\r\n\r\nexport const AddTransaction = () => {\r\n    const[description,setDescription]=useState('');\r\n    const[amount,setAmount]=useState('');\r\n    const {addTransaction}=useContext(GlobalContext);\r\n\r\n    const onSubmitt=(e:any)=>{\r\n         \r\n             e.preventDefault();\r\n             const newTransaction={\r\n             id:Math.floor(Math.random()*100000),\r\n                 description,\r\n                 amount:+amount\r\n             }\r\n             addTransaction(newTransaction);\r\n    }\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>Add Transaction</h3>\r\n                <form onSubmit={onSubmitt}>\r\n                <div className=\"trans-form\">\r\n                    <label htmlFor=\"Description\">Description</label>\r\n                    <input type=\"text\"\r\n                     value={description}\r\n                     onChange={(e:React.ChangeEvent<HTMLInputElement>)=>setDescription(e.target.value)}\r\n                     placeholder=\"Enter description\"\r\n                     required\r\n                    />\r\n                    </div>\r\n\r\n                    <div className=\"trans-form\">        \r\n                   <label htmlFor=\"Amount\">Amount</label>\r\n                    <input type=\"number\"\r\n                     value={amount}\r\n                     onChange={(e:React.ChangeEvent<HTMLInputElement>)=>setAmount(e.target.value)}\r\n                     placeholder=\"Enter Amount (-ve for expense)\"\r\n                     required\r\n                    />\r\n                    </div>\r\n                    <button className=\"btn\" >Add Transaction</button>\r\n                </form>\r\n            </div>\r\n\r\n    )\r\n}\r\n","import { Button } from '@material-ui/core';\r\nimport React,{useContext} from 'react'\r\nimport { GlobalContext } from '../context/globalContext'\r\n\r\nexport const TransactionHistory = () => {\r\n    const {transactions,deleteTransaction}=useContext(GlobalContext);\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>Transaction History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map((transactions:any)=><li key={transactions.id} className={transactions.amount<0 ? 'minus':'plus'}>\r\n                    {transactions.description}\r\n                 <span className='amount'>{transactions.amount}</span>\r\n                 <Button className=\"btn\"onClick={()=>deleteTransaction(transactions.id)}>X</Button>\r\n                </li>)}\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCgd2D47DVc21ptzbL2jKYkO5cFh_gWE58\",\r\n    authDomain: \"expenseapp-3458b.firebaseapp.com\",\r\n    projectId: \"expenseapp-3458b\",\r\n    storageBucket: \"expenseapp-3458b.appspot.com\",\r\n    messagingSenderId: \"117179395454\",\r\n    appId: \"1:117179395454:web:5a13503f9820c2a0dfd72f\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  const messaging = firebase.messaging();\r\n\r\nexport function initNotifications() {\r\n    Notification.requestPermission().then((permission) => {\r\n        if (permission === \"granted\") {\r\n            console.log(permission);\r\n            messaging.getToken().then((currentToken:any) => {\r\n                if (currentToken) {\r\n                    console.log(\"Token\");\r\n                    console.log(currentToken);\r\n                    \r\n\r\n                } else {\r\n                    console.log('No registration token available. Request permission to generate one.');\r\n                }\r\n            }).catch((err:any) => {\r\n                console.log('An error occurred while retrieving token. ', err);\r\n\r\n            });\r\n\r\n        }\r\n\r\n    })\r\n}\r\n","import { Paper } from '@material-ui/core';\nimport React from 'react';\nimport './App.css';\nimport { AccountSummary } from './Components/AccountSummary';\nimport { Balance } from './Components/Balance';\nimport {Header} from './Components/Header'\nimport {AddTransaction} from './Components/AddTransaction';\nimport { TransactionHistory } from './Components/TransactionHistory';\nimport { GlobalProvider } from './context/globalContext';\nimport { swDev } from './swDev';\nimport { initNotifications } from './firebaseNotifications';\n\nfunction App() {\n  \n    swDev();\n    initNotifications();\n \n  return (\n    <GlobalProvider>\n    <div className=\"App\">\n      <Paper  className=\"paper\" elevation={3}>\n        <Header/>\n        <Balance/>\n        <AccountSummary/>\n        <TransactionHistory/>\n        <AddTransaction/>\n      </Paper>\n    </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","export function swDev(){\r\n    if ('serviceWorker' in navigator) {\r\n        window.addEventListener('load', function() {\r\n          navigator.serviceWorker.register('/sw.js').then(function(registration) {\r\n            // Registration was successful\r\n            console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n          }, function(err) {\r\n            // registration failed :(\r\n            console.log('ServiceWorker registration failed: ', err);\r\n          });\r\n        });\r\n      }\r\n    }","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}